{"version":3,"file":"static/js/881.a564a49d.chunk.js","mappings":"kMACA,EAA4B,6BAA5B,EAAqE,6BAArE,EAAoH,mCAApH,EAAgK,0BAAhK,EAAgM,uB,SCInLA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGC,MAAMC,QAAQN,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAWO,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACjC,OACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAMZ,GAEfa,GAAE,kBAAaN,GAHjB,UAIE,iBAAKL,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXW,IAAG,yCAAoCJ,GACvCK,IAAKN,KAEP,gBAAKP,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SAA4BK,GAAQC,UATnCF,EAcV,MAGR,C,yKC/BD,EAAgC,8BAAhC,EAA2E,2BAA3E,EAAwH,gCAAxH,EAAwK,8B,SC+DxK,EAtDe,WACb,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiB,mCAAG,WAAOH,GAAP,uFAEtBN,GAAa,GAFS,UAGAU,EAAAA,EAAAA,IAAgBJ,GAHhB,UAGhBK,EAHgB,OAItBb,EAAUa,GACa,IAAnBA,EAAQC,OALU,wBAMpBC,IAAAA,OAAAA,QAAA,2CAA4DP,IAC5DN,GAAa,GAPO,6EAWtBE,EAAS,KAAMY,SAXO,yBAatBd,GAAa,GAbS,6EAAH,sDAgBvBS,EAAkBH,EAlBA,CAmBnB,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACM,OAAVP,GACJY,IAAAA,OAAAA,QAAA,gCAAiDZ,GAClD,GAAE,CAACA,IAQJ,OACE,iBAAKnB,UAAWC,EAAhB,WACE,kBAAMgC,SARW,SAACC,GACpBA,EAAEC,iBACFZ,EAAgB,CAAEC,MAAOU,EAAEE,OAAOC,SAASC,OAAOC,QAClDL,EAAEE,OAAOI,OACV,EAIiCxC,UAAWC,EAAzC,WACE,kBAAOK,KAAK,SAASN,UAAWC,KAChC,mBAAQwC,KAAK,SAASzC,UAAWC,EAAjC,uBAIDgB,IAAa,SAACyB,EAAA,EAAD,KACd,SAAC9C,EAAA,EAAD,CAAWC,UAAWkB,MAG3B,C,sLCzDK4B,E,OAAYC,EAAAA,OAAa,CAC7BC,QAJU,gCAKVC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAAUlB,IAAI,qBADN,uBACvBwB,EADuB,EACvBA,KADuB,kBAExBA,EAAKpB,SAFmB,2CAAH,qDAKjBD,EAAe,mCAAG,WAAOJ,GAAP,yFACNmB,EAAUlB,IAAI,eAAgB,CACnDqB,OAAQ,CAAEtB,MAAAA,KAFiB,uBACrByB,EADqB,EACrBA,KADqB,kBAItBA,EAAKpB,SAJiB,2CAAH,sDAOfqB,EAAe,mCAAG,WAAO7C,GAAP,yFACNsC,EAAUlB,IAAV,gBAAuBpB,IADjB,uBACrB4C,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfE,EAAe,mCAAG,WAAO9C,GAAP,yFACNsC,EAAUlB,IAAV,gBAAuBpB,EAAvB,aADM,uBACrB4C,EADqB,EACrBA,KADqB,kBAEtBA,EAAKG,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAOhD,GAAP,yFACNsC,EAAUlB,IAAV,gBAAuBpB,EAAvB,YAAqC,CAC1DyC,OAAQ,CACNQ,KAAM,KAHmB,uBACrBL,EADqB,EACrBA,KADqB,kBAMtBA,EAAKpB,SANiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieCard\":\"MovieList_movieCard__+xH2O\",\"containerHeader\":\"MovieList_containerHeader__ThhmK\",\"header\":\"MovieList_header__uHVw7\",\"img\":\"MovieList_img__Tmz2C\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./MovieList.module.css\";\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {Array.isArray(movieList) &&\n        movieList?.map(({ id, name, title, poster_path }) => {\n          return (\n            <Link \n              state={{ from: location }}\n              key={id} \n              to={`/movies/${id}`}>\n              <div className={css.movieCard}>\n                <img\n                  className={css.img}\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                />\n                <div className={css.containerHeader}>\n                  <h3 className={css.header}>{name || title}</h3>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"containerForm\":\"Movies_containerForm__k2+2O\",\"searchForm\":\"Movies_searchForm__J4-xw\",\"searchFormInput\":\"Movies_searchFormInput__9CWXR\",\"searchFormBtn\":\"Movies_searchFormBtn__2JcrI\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Notiflix from \"notiflix\";\nimport { getSearchMovies } from \"../../services/api\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport Loader from \"components/Loader/Loader\";\nimport css from \"./Movies.module.css\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchSearchMovies = async (query) => {\n      try {\n        setIsLoading(true);\n        const results = await getSearchMovies(query);\n        setMovies(results);\n        if (results.length === 0) {\n          Notiflix.Notify.failure(`Movies with this name not found :${query}`);\n          setIsLoading(false);\n          return;\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchMovies(query);\n  }, [query]);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notiflix.Notify.failure(`Something went wrong: ${error}`);\n  }, [error]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.search.value });\n    e.target.reset();\n  };\n\n  return (\n    <div className={css.containerForm}>\n      <form onSubmit={handleSubmit} className={css.searchForm}>\n        <input name=\"search\" className={css.searchFormInput} />\n        <button type=\"submit\" className={css.searchFormBtn}>\n          Search\n        </button>\n      </form>\n      {isLoading && <Loader />}\n      <MovieList movieList={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"af592fcf36199c3713f718a30eaa3789\";\n\nconst moviesAPI = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await moviesAPI.get(\"trending/all/week\");\n  return data.results;\n};\n\nexport const getSearchMovies = async (query) => {\n  const { data } = await moviesAPI.get(\"search/movie\", {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\nexport const getMoviePopular = async () => {\n  const { data } = await moviesAPI.get(`movie/popular`);\n  return data.results;\n};\n"],"names":["MovieList","movieList","location","useLocation","className","css","Array","isArray","map","id","name","title","poster_path","state","from","to","src","alt","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchSearchMovies","getSearchMovies","results","length","Notiflix","message","onSubmit","e","preventDefault","target","elements","search","value","reset","type","Loader","moviesAPI","axios","baseURL","params","api_key","getTrendingMovies","data","getMovieDetails","getMovieCredits","cast","getMovieReviews","page"],"sourceRoot":""}