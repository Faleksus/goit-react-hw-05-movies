{"version":3,"file":"static/js/581.a11852ee.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","webpack://goit-react-hw-05-movies/./src/pages/Popular/Popular.module.css?588c","pages/Popular/Popular.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieCard\":\"MovieList_movieCard__+xH2O\",\"containerHeader\":\"MovieList_containerHeader__ThhmK\",\"header\":\"MovieList_header__uHVw7\",\"img\":\"MovieList_img__Tmz2C\"};","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./MovieList.module.css\";\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {Array.isArray(movieList) &&\n        movieList?.map(({ id, name, title, poster_path }) => {\n          return (\n            <Link \n              state={{ from: location }}\n              key={id} \n              to={`/movies/${id}`}>\n              <div className={css.movieCard}>\n                <img\n                  className={css.img}\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                />\n                <div className={css.containerHeader}>\n                  <h3 className={css.header}>{name || title}</h3>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n    </ul>\n  );\n};\n\n// MovieList.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n//       name: PropTypes.string,\n//       title: PropTypes.string,\n//     })\n//   ),\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"containerForm\":\"Movies_containerForm__k2+2O\",\"headerMovies\":\"Movies_headerMovies__LP3lQ\",\"searchForm\":\"Movies_searchForm__J4-xw\",\"searchFormInput\":\"Movies_searchFormInput__9CWXR\",\"searchFormBtn\":\"Movies_searchFormBtn__2JcrI\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerPopular\":\"Popular_containerPopular__O3gAI\",\"headerPopular\":\"Popular_headerPopular__8emP9\"};","import Loader from \"components/Loader/Loader\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport Notiflix from \"notiflix\";\nimport React, { useEffect, useState } from \"react\";\nimport { getMoviePopular } from \"services/api\";\nimport css from \"./Popular.module.css\";\n\nfunction Popular() {\n  const [popular, setPopular] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchPopular = async () => {\n      try {\n        const moviesPopular = await getMoviePopular();\n        setPopular(moviesPopular);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPopular();\n  }, []);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notiflix.Notify.failure(`Something went wrong: ${error}`);\n  }, [error]);\n  return (\n    <div className={css.containerPopular}>\n      <ul>\n        <li key={popular.id}>\n          <h2 className={css.headerPopular}>\n            List of the current popular movies\n          </h2>\n          {isLoading && <Loader />}\n          {/* {error !== null && <p>Whoops, something went wrong: {error}</p>} */}\n          <MovieList movieList={popular} />\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Popular;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Notiflix from \"notiflix\";\nimport css from \"./Movies.module.css\";\nimport { getSearchMovies } from \"../../services/api\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport Loader from \"components/Loader/Loader\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Popular from \"pages/Popular/Popular\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  useEffect(() => {\n    if (query !== null && query.trim() === \"\") return;\n    // Варіант 2\n    // if (query.trim().length === 0) return;\n\n    const fetchSearchMovies = async (query) => {\n      try {\n        setIsLoading(true);\n        const results = await getSearchMovies(query);\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchMovies(query);\n  }, [query]);\n\n  console.log(movies);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notiflix.Notify.failure(`Something went wrong: ${error}`);\n  }, [error]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.search.value });\n    e.target.reset();\n  };\n\n  return (\n    <div className={css.containerForm}>\n      <form onSubmit={handleSubmit} className={css.searchForm}>\n        <h2 className={css.headerMovies}>\n          You can choose from popular movies or use the search\n        </h2>\n        <input name=\"search\" className={css.searchFormInput} />\n        <button type=\"submit\" className={css.searchFormBtn}>\n          Search\n        </button>\n      </form>\n      {isLoading && <Loader />}\n      {movies.length > 0 ? <MovieList movieList={movies} /> : <Popular />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"af592fcf36199c3713f718a30eaa3789\";\n\nconst moviesAPI = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await moviesAPI.get(\"trending/all/week\");\n  return data.results;\n};\n\nexport const getSearchMovies = async (query) => {\n  const { data } = await moviesAPI.get(\"search/movie\", {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\nexport const getMoviePopular = async () => {\n  const { data } = await moviesAPI.get(`movie/popular`);\n  return data.results;\n};\n"],"names":["MovieList","movieList","location","useLocation","className","css","Array","isArray","map","id","name","title","poster_path","state","from","to","src","alt","useState","popular","setPopular","isLoading","setIsLoading","error","setError","useEffect","fetchPopular","getMoviePopular","moviesPopular","message","Notiflix","Loader","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","trim","fetchSearchMovies","getSearchMovies","results","console","log","onSubmit","e","preventDefault","target","elements","search","value","reset","type","length","moviesAPI","axios","baseURL","params","api_key","getTrendingMovies","data","getMovieDetails","getMovieCredits","cast","getMovieReviews","page"],"sourceRoot":""}