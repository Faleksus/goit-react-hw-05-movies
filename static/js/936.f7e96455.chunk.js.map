{"version":3,"file":"static/js/936.f7e96455.chunk.js","mappings":"kMACA,EAA4B,6BAA5B,EAAqE,6BAArE,EAAoH,mCAApH,EAAgK,0BAAhK,EAAgM,uB,SCInLA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGC,MAAMC,QAAQN,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAWO,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACjC,OACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAMZ,GAEfa,GAAE,kBAAaN,GAHjB,UAIE,iBAAKL,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXW,IAAG,yCAAoCJ,GACvCK,IAAKN,KAEP,gBAAKP,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SAA4BK,GAAQC,UATnCF,EAcV,MAGR,C,iKC/BD,EAAgC,4BAAhC,EAAyE,yB,SCgDzE,EAxCiB,WACf,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAW,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAEVC,EAFU,OAGhBR,EAAUQ,GAHM,gDAKhBJ,EAAS,KAAIK,SALG,yBAOhBP,GAAa,GAPG,4EAAH,qDAWjBI,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACM,OAAVF,GACJO,IAAAA,OAAAA,QAAA,gCAAiDP,GAClD,GAAE,CAACA,KAGF,gBAAKnB,UAAWC,EAAhB,UACE,yBACE,2BACE,eAAID,UAAWC,EAAf,gCACCgB,IAAa,SAACU,EAAA,EAAD,KAEd,SAAC/B,EAAA,EAAD,CAAWC,UAAWkB,MAJfA,EAAOV,OASvB,C,8MC1CKuB,E,OAAYC,EAAAA,OAAa,CAC7BC,QAJU,gCAKVC,OAAQ,CACNC,QALY,sCASHT,EAAiB,mCAAG,sGACRK,EAAUK,IAAI,qBADN,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,yFACNT,EAAUK,IAAI,eAAgB,CACnDF,OAAQ,CAAEM,MAAAA,KAFiB,uBACrBH,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,sDAOfG,EAAe,mCAAG,WAAOjC,GAAP,yFACNuB,EAAUK,IAAV,gBAAuB5B,IADjB,uBACrB6B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAe,mCAAG,WAAOlC,GAAP,yFACNuB,EAAUK,IAAV,gBAAuB5B,EAAvB,aADM,uBACrB6B,EADqB,EACrBA,KADqB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAOpC,GAAP,yFACNuB,EAAUK,IAAV,gBAAuB5B,EAAvB,YAAqC,CAC1D0B,OAAQ,CACNW,KAAM,KAHmB,uBACrBR,EADqB,EACrBA,KADqB,kBAMtBA,EAAKC,SANiB,2CAAH,sDASfQ,EAAe,mCAAG,sGACNf,EAAUK,IAAV,iBADM,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,oD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieCard\":\"MovieList_movieCard__+xH2O\",\"containerHeader\":\"MovieList_containerHeader__ThhmK\",\"header\":\"MovieList_header__uHVw7\",\"img\":\"MovieList_img__Tmz2C\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./MovieList.module.css\";\n\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {Array.isArray(movieList) &&\n        movieList?.map(({ id, name, title, poster_path }) => {\n          return (\n            <Link \n              state={{ from: location }}\n              key={id} \n              to={`/movies/${id}`}>\n              <div className={css.movieCard}>\n                <img\n                  className={css.img}\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                />\n                <div className={css.containerHeader}>\n                  <h3 className={css.header}>{name || title}</h3>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"containerHome\":\"Home_containerHome__Sauq7\",\"headerHome\":\"Home_headerHome__eHGXq\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport Notiflix from \"notiflix\";\nimport { getTrendingMovies } from \"../../services/api\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport Loader from \"components/Loader/Loader\";\nimport css from \"./Home.module.css\";\n\nconst HomePage = () => {\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchTrands = async () => {\n      try {\n        const movies = await getTrendingMovies();\n        setTrends(movies);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrands();\n  }, []);\n\n  useEffect(() => {\n    if (error === null) return;\n    Notiflix.Notify.failure(`Something went wrong: ${error}`);\n  }, [error]);\n\n  return (\n    <div className={css.containerHome}>\n      <ul>\n        <li key={trends.id}>\n          <h2 className={css.headerHome}>Trends of the week</h2>\n          {isLoading && <Loader />}\n          {/* {error !== null && <p>Whoops, something went wrong: {error}</p>} */}\n          <MovieList movieList={trends} />\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n\nHomePage.propTypes = {\n  trends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import axios from \"axios\";\n\nconst URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"af592fcf36199c3713f718a30eaa3789\";\n\nconst moviesAPI = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await moviesAPI.get(\"trending/all/week\");\n  return data.results;\n};\n\nexport const getSearchMovies = async (query) => {\n  const { data } = await moviesAPI.get(\"search/movie\", {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await moviesAPI.get(`movie/${id}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\nexport const getMoviePopular = async () => {\n  const { data } = await moviesAPI.get(`movie/popular`);\n  return data.results;\n};\n"],"names":["MovieList","movieList","location","useLocation","className","css","Array","isArray","map","id","name","title","poster_path","state","from","to","src","alt","useState","trends","setTrends","isLoading","setIsLoading","error","setError","useEffect","fetchTrands","getTrendingMovies","movies","message","Notiflix","Loader","moviesAPI","axios","baseURL","params","api_key","get","data","results","getSearchMovies","query","getMovieDetails","getMovieCredits","cast","getMovieReviews","page","getMoviePopular"],"sourceRoot":""}